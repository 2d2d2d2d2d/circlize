% \VignetteIndexEntry{Draw ideogram}
% \VignetteDepends{circlize}
% \VignetteKeywords{circos}
% \VignetteKeywords{ideogram}
% \VignetteKeywords{circlize}
% \VignettePackage{circlize}

\documentclass[a4paper]{article}

\title{How to draw ideogram}

\author{Zuguang Gu\\ German Cancer Research Center,\\ Heidelberg, Germany}

\usepackage{Sweave}

\begin{document}

\maketitle 

The most wide use for the circos layout is to display genomic information.
And in most circumstances, the figures contain an ideogram. This document
will tell you how to draw ideogram by {\tt circlize} package.

An ideogram is, in fact, a series of rectangles with different colors.
Here we are going to draw the ideogram for human.

The cytoband data for human can be download from \\
{\url http://hgdownload.cse.ucsc.edu/goldenPath/hg19/database/cytoBand.txt.gz}.
Uncompress the file and read it into R. Here the package already contains such file.

\begin{Schunk}
\begin{Sinput}
> library(circlize)
> d = read.table(file = paste(system.file(package = "circlize"),
+                       "/extdata/cytoBand.txt", sep=""),
+     colClasses = c("factor", "numeric", "numeric", "factor", "factor"))
> head(d)
\end{Sinput}
\begin{Soutput}
    V1       V2       V3     V4     V5
1 chr1        0  2300000 p36.33   gneg
2 chr1  2300000  5400000 p36.32 gpos25
3 chr1  5400000  7200000 p36.31   gneg
4 chr1  7200000  9200000 p36.23 gpos25
5 chr1  9200000 12700000 p36.22   gneg
6 chr1 12700000 16200000 p36.21 gpos50
\end{Soutput}
\end{Schunk}

Here, setting the {\tt colClasses} argument when reading the cytoband file is very important,
because the positions on chromosomes are large integers (the second column and third column),
{\tt read.table} would store such data as {\tt integer} mode. The sumation of such large integers
would throw error of data overflow. So you must set the data mode to float point ({\tt numeric}).

Since chromosomes are sorted by its name as a mode of character, the order would look
like "chr1, chr10, chr11, ..., chr2, chr20, ...". We need to sort chromosomes by 
the numeric index.

\begin{Schunk}
\begin{Sinput}
> chromosome = levels(d[[1]])
> chromosome.ind = gsub("chr", "", chromosome)
> chromosome.num = grep("^\\d+$", chromosome.ind, value = TRUE)
> chromosome.letter = chromosome.ind[!grepl("^\\d+$", chromosome.ind)]
> chromosome.num = sort(as.numeric(chromosome.num))
> chromosome.letter = sort(chromosome.letter)
> chromosome.num = paste("chr", chromosome.num, sep = "")
> chromosome.letter = paste("chr", chromosome.letter, sep = "")
>
> chromosome = c(chromosome.num, chromosome.letter)
> chromosome
\end{Sinput}
\begin{Soutput}
 [1] "chr1"  "chr2"  "chr3"  "chr4"  "chr5"  "chr6"  "chr7"  "chr8"  "chr9" 
[10] "chr10" "chr11" "chr12" "chr13" "chr14" "chr15" "chr16" "chr17" "chr18"
[19] "chr19" "chr20" "chr21" "chr22" "chrX"  "chrY" 
\end{Soutput}
\end{Schunk}

Calculate the range for each chromosome which is going to be the xlim of
each sector. In the following code, rows of {\tt xlim} correspond to the 
element of {\tt chromosome}.

\begin{Schunk}
\begin{Sinput}
> xlim = matrix(nrow = 0, ncol = 2)
> for(chr in chromosome) {
>     d2 = d[d[[1]] == chr, ]
>     xlim = rbind(xlim,c(min(d2[[2]]), max(d2[[3]])))
> }
\end{Sinput}
\end{Schunk}

Do some cleanings and set some graphic parameters. Here we do not need
any cell paddings.

\begin{Schunk}
\begin{Sinput}
> circos.clear()
> par(mar = c(1, 1, 1, 1), lwd = 0.5)
> circos.par("cell.padding" = c(0, 0, 0, 0))
\end{Sinput}
\end{Schunk}

Initialize the circos layout with ranges of chromosomes. Here you must explicitly
set the levels of the factors to ensure the order of chromosome is "chr1, chr2,
chr3, ...".

\begin{Schunk}
\begin{Sinput}
> circos.initialize(factor(chromosome, levels = chromosome), xlim = xlim)
\end{Sinput}
\end{Schunk}

We will draw the ideogram, the axis for chromosomes and the name of chromosomes in a same track. (
It is just an option, also you can draw ideogram, axis and names of chromosomes in different tracks) 
Here we create the first track in which there are 24 cells and each cell corresponds to 
a chromosome. The x-range of each cell is the range of the chromosome and the y-range of
each cell is from 0 to 1.

There are two ways to draw the ideogram. First, create the plotting region first, then draw
ideogram cell by cell.

\begin{Schunk}
\begin{Sinput}
> circos.trackPlotRegion(factors = factor(chromosome, levels = chromosome),
+     ylim = c(0, 1), bg.border = NA, track.height = 0.1)
\end{Sinput}
\end{Schunk}

Now in each cell, we draw the ideogram for each chromosome. Code is simple, you
can read that.
\begin{Schunk}
\begin{Sinput}
> for(chr in chromosome) {
+     d2 = d[d[[1]] == chr, ]
+     n = nrow(d2)
+     # assign colors
+     col = rep("#FFFFFF", n)
+     col[d2[[5]] == "acen"] = "#E41A1C"
+     col[d2[[5]] == "stalk"] = "#377EB8"
+     col[d2[[5]] == "gvar"] = "#404040"
+     col[d2[[5]] == "gpos100"] = "#000000"
+     col[d2[[5]] == "gpos"] = "#000000"
+     col[d2[[5]] == "gpos75"] = "#BFBFBF"
+     col[d2[[5]] == "gpos50"] = "#808080"
+     col[d2[[5]] == "gpos25"] = "#404040"
+     # rectangles for different locus
+     for(i in seq_len(n)) {
+         circos.rect(d2[i, 2], 0, d2[i, 3], 0.4, sector.index = chr,
+              col = col[i], border = NA)
+     }
+     circos.rect(d2[1, 2], 0, d2[n, 3], 0.4, sector.index = chr,
+         border = "black")
+     # axis
+     major.at = seq(0, 10^nchar(max(xlim[, 2])), by = 50000000)
+     circos.axis(h = 0.5, major.at = major.at,
+         labels = paste(major.at/1000000, "MB", sep = ""),
+         sector.index = chr, labels.cex = 0.2)
+     cell.xlim = get.cell.meta.data("xlim", sector.index = chr)
+     # chromosome names
+     circos.text(cell.xlim[1] + mean(cell.xlim), 1.2,
+         labels = gsub("chr", "", chr),
+         sector.index = chr, cex = 0.8)
+ }
\end{Sinput}
\end{Schunk}

Second, draw ideogram directly as the creation of the plotting region by using {\tt panel.fun} argument.

\begin{Schunk}
\begin{Sinput}
> circos.trackPlotRegion(factors = factor(chromosome, levels = chromosome),
+   ylim = c(0, 1), bg.border = NA, track.height = 0.1,
+   panel.fun = function(x, y) {
+     
+     chr = get.cell.meta.data("sector.index")
+     d2 = d[d[[1]] == chr, ]
+     n = nrow(d2)
+     # assign colors
+     col = rep("#FFFFFF", n)
+     col[d2[[5]] == "acen"] = "#E41A1C"
+     col[d2[[5]] == "stalk"] = "#377EB8"
+     col[d2[[5]] == "gvar"] = "#404040"
+     col[d2[[5]] == "gpos100"] = "#000000"
+     col[d2[[5]] == "gpos"] = "#000000"
+     col[d2[[5]] == "gpos75"] = "#BFBFBF"
+     col[d2[[5]] == "gpos50"] = "#808080"
+     col[d2[[5]] == "gpos25"] = "#404040"
+     # rectangles for different locus
+     for(i in seq_len(n)) {
+         circos.rect(d2[i, 2], 0, d2[i, 3], 0.4, col = col[i], border = NA)
+     }
+     circos.rect(d2[1, 2], 0, d2[n, 3], 0.4, border = "black")
+     # axis
+     major.at = seq(0, 10^nchar(max(xlim[, 2])), by = 50000000)
+     circos.axis(h = 0.5, major.at = major.at,
+         labels = paste(major.at/1000000, "MB", sep = ""),
+         labels.cex = 0.2)
+     cell.xlim = get.cell.meta.data("xlim")
+     # chromosome names
+     circos.text(cell.xlim[1] + mean(cell.xlim), 1.2,
+         labels = gsub("chr", "", chr), cex = 0.8)
+
+ })
\end{Sinput}
\end{Schunk}

There may be some warnings saying some points are out of the plotting region. Don't worry about that,
it's just OK.

If there is a translocation from position 111111111 in chromosome 2 to position 55555555 in chromosome 16. It can represent
as a link in the circos layout.

\begin{Schunk}
\begin{Sinput}
> circos.link(sector.index1 = "chr2", point1 = 111111111,
+             sector.index2 = "chr16", point2 = 55555555)
\end{Sinput}
\end{Schunk}

If position 88888888 in chromosome 6 is important and we want to mark it, we can use following codes.
Second, draw ideogram directly as the creation of the plotting region by using {\tt panel.fun} argument.
Here there no specifying of {\tt factors}, thus the new track would create plotting regions for all available
sectors.

\begin{Schunk}
\begin{Sinput}
> # create a new track
> circos.trackPlotRegion(ylim = c(0, 1), bg.border = NA)
> circos.text(88888888, 0.2, labels = "site", sector.index = "chr6",
+     adj = c(0.5, 1))
> circos.lines(c(88888888, 88888888), c(0.3, 1), sector.index = "chr6",
+     straight = TRUE)
\end{Sinput}
\end{Schunk}


<<label=figideogram, include=FALSE, echo=FALSE>>=
library(circlize)
circos.initializeWithIdeogram()
circos.link(sector.index1 = "chr2", point1 = 111111111, sector.index2 = "chr16", point2 = 55555555)
circos.trackPlotRegion(ylim = c(0, 1), bg.border = NA)
circos.text(88888888, 0.2, labels = "site", sector.index = "chr6", adj = c(0.5, 1))
circos.lines(c(88888888, 88888888), c(0.3, 1), sector.index = "chr6", straight = TRUE)
@

\begin{figure}
\begin{center}
<<label=figideogram, fig = TRUE, echo = FALSE>>=
<<figideogram>>
@
\end{center}
\caption{Ideogram in circos layout}
\label{fig:ideogram}
\end{figure}

The finnal figure looks like figure 1.


In the {\tt circlize} package, there is already a {\tt circos.initializeWithIdeogram}
function to initialize the circos layout with an ideogram. However, how to embed the ideogram into the
circos layout is really subjective, users can draw their style of ideogram according
the above example codes.

	
\end{document}
